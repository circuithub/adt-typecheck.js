/*
 * adt-typecheck.js - Typechecking for JavaScript through adt.js evaluators
 * adt-typecheck.js is free, public domain software (http://creativecommons.org/publicdomain/zero/1.0/)
 * Originally created by Rehno Lindeque of http://www.mischievousmeerkat.com
 * Use it in combination with https://github.com/rehno-lindeque/adt.js
 */
var adt = adt || (typeof require === 'function'? require('adt.js') : {});
(function() {
"use strict";
adt.JSON={},adt.JSON.tags=["Number","String","Boolean","Array","Object","Null"],adt.JSON.constructors=adt.apply(null,adt.JSON.tags),adt.Class={},adt.Class.tags=["Arguments","Array","Boolean","Date","Error","Function","JSON","Math","Number","Object","RegExp","String","Null","Undefined"],adt.Class.constructors=adt.apply(null,adt.Class.tags);var classCons=adt.Class.constructors,typeError=function(a,b,c){return c?{key:c,expected:a,received:b}:{expected:a,received:b}},typeErrorF=function(a,b){return function(){return[typeError(a,this._tag,b)]}},isClass=function(a){var b={_:!1};return b[a]=function(b){return this._datatype===a},adt(b)},isObject=isClass("Object"),typecheck=function(a,b){if(a==null)throw"Invalid type definition: "+a;return adt({Object:function(a){return isObject(a)?adt({Object:function(c){var d,e=[],f;for(d in a)f=d+(b?"."+b:""),typeof c[d]=="undefined"&&a[d]._tag!=="Undefined"?e.push(typeError(adt.serialize(a[d]),void 0,f)):e=e.concat(typecheck(a[d],f)(c[d]));return e},_:typeErrorF("Object",b)}):this._(classCons.Object.apply(null,arguments))},_:function(){var a=this._tag,c={_:typeErrorF(a,b)};return c[a]=[],adt(c)}})(a)};adt.typecheck=function(a){return typecheck(a.call(adt.Class.constructors))},adt.typecheck.show=function(a){return Array.isArray(a)?a.map(adt.typecheck.show):"Expected "+(typeof a.key=="string"?a.key+" of type ":"type ")+"'"+a.expected+"', but received '"+a.received+"'"};var isFunctionADT=adt({Function:function(){return this.datatype==="ADT"},_:!1});adt.typecheck.signature={"function":function(a,b){if(typeof a!="function")throw"No type signature supplied to `adt.typecheck.signature.function`.";if(!b)throw"No function supplied to `adt.typecheck.signature.function`.";var c=adt.typecheck(function(){return this.Arguments(a())});return function(){var a=c(arguments);if(a.length>0)throw adt.typecheck.show(a).join("\n");b.apply(null,arguments)}},chainFunction:function(a,b){if(typeof a!="function")throw"No type signature supplied to `adt.typecheck.signature.chainFunction`.";if(typeof b!="function")throw"No node function supplied to `adt.typecheck.signature.chainFunction`.";var c,d=adt.typecheck(function(){var b=a();if(b.length<1)throw"Too few arguments in chain function, a callback function is required.";if(!isFunctionADT(b[b.length-1]))throw"The last argument in the chain function signature should be a Function.";return c=b.length,this.Arguments(b)});return function(){var a=d(arguments),e;if(arguments.length!==c)throw"Incorrect number of arguments passed to the function.";e=arguments[arguments.length-1];if(typeof e!="function")throw"No callback function supplied.";a.length>0?e(adt.typecheck.show(a)):b.apply(null,[].slice.call(arguments).concat([e]))}}};  // Export typecheck to a CommonJS module if exports is available
  if (typeof module !== "undefined" && module !== null)
    module.exports = adt.typecheck;
})();
